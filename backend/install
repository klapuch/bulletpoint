apt-get update
apt-get install sudo
adduser bulletpoint
usermod -a -G sudo bulletpoint

apt-get install curl apt-transport-https ca-certificates vim gnupg software-properties-common make git sudo zip unzip htop fail2ban
curl https://nginx.org/keys/nginx_signing.key -O nginx_signing.key
apt-key add nginx_signing.key
rm nginx_signing.key

vim /etc/apt/sources.list
deb http://nginx.org/packages/debian/ stretch nginx
deb-src http://nginx.org/packages/debian/ stretch nginx

apt-get update
apt-get install nginx
apt-get install nginx-module-image-filter

wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
sh -c 'echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list'
apt-get update
apt-get install php7.3-fpm php7.3-xsl php7.3-curl php7.3-mbstring php7.3-zip php7.3-pgsql php7.3-gd
apt-get install php-apcu php-redis php-igbinary


wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
RELEASE=$(lsb_release -cs)
echo "deb http://apt.postgresql.org/pub/repos/apt/ ${RELEASE}"-pgdg main | tee /etc/apt/sources.list.d/pgdg.list
apt-get update
apt install postgresql-11


apt-get install redis-server
service redis-server stop

mv /etc/redis/redis.conf /etc/redis/redis-cache.conf
cp /etc/redis/redis-cache.conf /etc/redis/redis-session.conf
chown redis.redis /etc/redis/redis-session.conf

vim /etc/redis/redis-cache.conf
pidfile /var/run/redis/redis-server-cache.pid
port 6379
dbfilename dump-cache.rdb
maxmemory 500mb


mv /etc/init.d/redis-server /etc/init.d/redis-server-cache
cp /etc/init.d/redis-server-cache /etc/init.d/redis-server-session

vim /etc/init.d/redis-server-cache
NAME=redis-server-cache
DESC=redis-server-cache
DAEMON_ARGS=/etc/redis/redis-cache.conf
PIDFILE=$RUNDIR/redis-server-cache.pid


mv /lib/systemd/system/redis-server.service /lib/systemd/system/redis-server-cache.service
cp /lib/systemd/system/redis-server-cache.service /lib/systemd/system/redis-server-session.service

vim /lib/systemd/system/redis-server-cache.service
ExecStart=/usr/bin/redis-server /etc/redis/redis-cache.conf
PIDFile=/var/run/redis/redis-server-cache.pid
Alias=redis.service-cache



systemctl enable redis-server-cache.service
systemctl enable redis-server-session.service

service redis-server-cache restart
service redis-server-session restart



curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt-get update && sudo apt-get install yarn


sudo -u postgres createuser bulletpoint --superuser --pwprompt
sudo -u postgres createdb bulletpoint


curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer


vim /etc/php/7.3/fpm/pool.d/www.conf
user = bulletpoint
group = bulletpoint
listen.owner = bulletpoint
listen.group = bulletpoint


ssh-keygen -t rsa -b 4096
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa

sudo visudo
bulletpoint ALL=(ALL) NOPASSWD: ALL


ssh-copy-id -i ~/.ssh/id_rsa.pub bulletpoint@95.168.218.174

ssh-keygen -t rsa -b 4096 -C 'build.bulletpoint@travis-ci.org' -f ./id_rsa
travis encrypt-file id_rsa --add
ssh-copy-id -i id_rsa.pub bulletpoint@95.168.218.174

ssh-keyscan -H 140.82.118.3 >> ~/.ssh/known_hosts
ssh-keyscan -H github.com >> ~/.ssh/known_hosts

rm -f id_rsa id_rsa.pub


sudo nano /etc/dehydrated/conf.d/config.sh

CA="https://acme-staging.api.letsencrypt.org/directory" # as staging
BASEDIR="/etc/letsencrypt"
WELLKNOWN="/data/www/letsencrypt"
CONTACT_EMAIL="klapuchdominik@gmail.com"
# afters tests - remove accounts and certs !!


sudo mkdir /etc/letsencrypt
mkdir /data/www/letsencrypt

sudo nano /etc/dehydrated/domains.txt
api.bulletpoint.cz
static.bulletpoint.cz
www.bulletpoint.cz


sudo vim /etc/ssh/sshd_config
PermitRootLogin no
PasswordAuthentication no
PermitEmptyPasswords no

vim ~/.pgpass
localhost:5432:bulletpoint:bulletpoint:PASSWORD

sudo chmod 600 ~/.pgpass

sudo vim ~/.profile
export PGPASSFILE=~/.pgpass

source ~/.profile



mkdir /backup
sudo crontab -e

# Let's encrypt (once a week - sunday at 22:00)
0 22 * * 0 /usr/bin/dehydrated -c && /usr/sbin/service nginx reload


sudo crontab -e -u bulletpoint


# postgres backup (every day at 01:00)
0 1 * * * /usr/bin/pg_dump --file=/backup/bulletpoint_$(/bin/date +"\%Y\%m\%d_\%H\%M\%S") --format=custom --dbname=bulletpoint --host=localhost --port=5432 --username=bulletpoint -w

# remove everything except last 10 backups (every day at 02:00)
0 2 * * * ls /backup/* -A1t | tail -n +10 | xargs --no-run-if-empty rm

# application cron (every minute)
* * * * * (cd /var/www/bulletpoint/current/backend && BULLETPOINT_ENV=production make cron)
